name: Check Maintainer Role

on:
  pull_request_review:
    types: [submitted]

jobs:
  check-maintainer-role:
    runs-on: ubuntu-latest

    steps:
      - name: Check if reviewer has maintain role
        id: check_maintain_role
        run: |
          REVIEWER_LOGIN=$(jq -r '.review.user.login' $GITHUB_EVENT_PATH)
          echo "Reviewer: $REVIEWER_LOGIN"
          REVIEW_STATE=$(jq -r '.review.state' $GITHUB_EVENT_PATH)
          echo "Review State: $REVIEW_STATE"

          if [ "$REVIEW_STATE" != "approved" ]; then
            echo "Review is not an approval. Exiting."
            exit 0
          fi

          REPO=$(jq -r '.repository.full_name' $GITHUB_EVENT_PATH)
          echo "Repository: $REPO"

          PERMISSIONS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                              -H "Accept: application/vnd.github.v3+json" \
                              https://api.github.com/repos/$REPO/collaborators/$REVIEWER_LOGIN/permission)

          echo "Permissions: $PERMISSIONS"
          MAINTAINER=$(echo $PERMISSIONS | jq -r '.permission')

          if [ "$MAINTAINER" == "admin" ] || [ "$MAINTAINER" == "maintain" ]; then
            echo "Reviewer has maintain or admin role. Proceeding."
          else
            echo "Only team leads can merge to this branch."
            exit 1
          fi

      - name: Set PR status
        if: steps.check_maintain_role.outcome == 'failure'
        run: |
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/$REPO/statuses/$(jq -r .pull_request.head.sha $GITHUB_EVENT_PATH) \
               -d '{
                 "state": "failure",
                 "context": "maintainer-check",
                 "description": "Only team leads can merge to this branch"
               }'
        env:
          REPO: ${{ github.repository }}

      - name: Approve PR status
        if: steps.check_maintain_role.outcome == 'success'
        run: |
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/$REPO/statuses/$(jq -r .pull_request.head.sha $GITHUB_EVENT_PATH) \
               -d '{
                 "state": "success",
                 "context": "maintainer-check",
                 "description": "Reviewer has maintain or admin role"
               }'
        env:
          REPO: ${{ github.repository }}
